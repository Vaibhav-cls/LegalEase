<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Edit Provider Details</title>
    <style>
      * {
        box-sizing: border-box;
      }
      body {
        display: flex;
        justify-content: center;
        align-items: center;
        flex-direction: column;
      }
      .field {
        display: inline-block;
      }
      .field p {
        border: 2px solid black;
        padding: 5px;
      }
      .profile-pic {
        width: 150px;
        position: absolute;
        right: 30px;
        top: 30px;
      }
      .profile-pic img {
        width: 100%;
      }
      form {
        background-color: #add8e6;
        width: 50%;
        padding: 10px;
      }
      .location {
        display: flex;
        flex-wrap: wrap;
        padding: 10px;
        justify-content: space-evenly;
      }
      .location .field {
        margin-bottom: 5px;
      }
      textarea {
        width: 100%;
      }
      .tag {
        padding: 5px;
        border-radius: 10px;
        border: 1px solid gray;
        cursor: pointer;
      }
      .disabled {
        opacity: 0.5;
        pointer-events: none;
      }
    </style>
    <script>
      const allTags = <%- JSON.stringify(allTags) %>;
    </script>
  </head>
  <body>
    <div class="profile-pic">
      <img src="<%= user.image.url %>" alt="Profile Pic" />
    </div>
    <h3>Update Details</h3>
    <form id="details-form" action="/provider/edit/<%=provider._id%>?_method=PUT" method="POST">
      <div class="field">
        <label for="bio">Bio</label>
        <input
          type="text"
          name="bio"
          id="bio"
          value="<%=provider.bio%>"
          required
        />
      </div>
      <div class="field">
        <label for="experience">Experience (in years)</label>
        <input type="text" name="experience" value="<%=provider.experience%>" />
      </div>
      <p>Location</p>
      <div class="location">
        <div class="field">
          <label for="location[country]">Country</label>
          <input
            type="text"
            name="location[country]"
            id="country"
            value="<%=provider.location.country%>"
            required
          />
        </div>
        <div class="field">
          <label for="location[state]">State</label>
          <input
            type="text"
            name="location[state]"
            id="state"
            value="<%=provider.location.state%>"
            required
          />
        </div>
        <div class="field">
          <label for="location[city]">City</label>
          <input
            type="text"
            name="location[city]"
            id="city"
            value="<%=provider.location.city%>"
            required
          />
        </div>
        <div class="field">
          <label for="pincode">Pincode</label>
          <input
            type="number"
            maxlength="4"
            minlength="4"
            name="location[pincode]"
            id="pincode"
            value="<%=provider.location.pincode%>"
            required
          />
        </div>
      </div>
      <div class="tags">
        <p>
          Add tags which define your work, so that people can find you easily
        </p>
        <div class="tag-container">
          <textarea id="name" rows="3"></textarea>
          <button type="button" id="add">+</button>
          <div id="added-tags">
            <% for(tag of provider.tags) { %>
            <button class="tag addedTag" value="<%= tag.name %>">
              <%= tag.name %> x
            </button>
            <% } %>
          </div>
          <hr />
          <div id="existing-tags"></div>
        </div>
      </div>
      <input type="hidden" name="tags" id="selectedTags" />
      <button type="submit">Submit</button>
    </form>
    <script>
      let addBtn = document.getElementById("add");
      let nameInput = document.getElementById("name");
      let addedTags = document.getElementById("added-tags");
      let existingTags = document.getElementById("existing-tags");
      let selectedTagsInput = document.getElementById("selectedTags");
      let selectedTags = [];

      const initializeTags = () => {
        allTags.forEach(tag => {
          const isSelected = selectedTags.includes(tag.name);
          const tagButton = document.createElement("button");
          tagButton.innerText = tag.name + " +";
          tagButton.value = tag.name;
          tagButton.classList.add("tag");
          tagButton.type = "button";
          if (isSelected) {
            tagButton.classList.add("disabled");
          }
          tagButton.addEventListener("click", () => {
            if (!tagButton.classList.contains("disabled")) {
              selectedTags.push(tag.name);
              updateTags();
            }
          });
          existingTags.appendChild(tagButton);
        });

        addedTags.querySelectorAll(".tag").forEach(button => {
          button.addEventListener("click", () => {
            selectedTags = selectedTags.filter(tag => tag !== button.value);
            updateTags();
          });
        });
      };

      const updateTags = () => {
        addedTags.innerHTML = "";
        existingTags.innerHTML = "";
        selectedTagsInput.value = JSON.stringify(selectedTags);

        selectedTags.forEach(tag => {
          const tagButton = document.createElement("button");
          tagButton.innerText = tag + " x";
          tagButton.value = tag;
          tagButton.classList.add("tag", "addedTag");
          tagButton.type = "button";
          tagButton.addEventListener("click", () => {
            selectedTags = selectedTags.filter(t => t !== tag);
            updateTags();
          });
          addedTags.appendChild(tagButton);
        });

        allTags.forEach(tag => {
          const isSelected = selectedTags.includes(tag.name);
          const tagButton = document.createElement("button");
          tagButton.innerText = tag.name + " +";
          tagButton.value = tag.name;
          tagButton.classList.add("tag");
          tagButton.type = "button";
          if (isSelected) {
            tagButton.classList.add("disabled");
          }
          tagButton.addEventListener("click", () => {
            if (!tagButton.classList.contains("disabled")) {
              selectedTags.push(tag.name);
              updateTags();
            }
          });
          existingTags.appendChild(tagButton);
        });
      };

      <% for(tag of provider.tags) { %>
        selectedTags.push("<%= tag.name %>");
      <% } %>

      initializeTags();
      updateTags();

      addBtn.addEventListener("click", () => {
        let newTag = nameInput.value.trim();
        if (newTag && !selectedTags.includes(newTag)) {
          selectedTags.push(newTag);
          updateTags();
          nameInput.value = "";
        }
      });

      document.getElementById("details-form").addEventListener("submit", function (event) {
        selectedTagsInput.value = JSON.stringify(selectedTags);
      });
    </script>
  </body>
</html>
